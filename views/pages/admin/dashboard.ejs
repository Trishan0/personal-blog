<%- include('../../partials/header') %>

<div class="container">
    <div class="page-content">
        <div class="admin-header">
            <h1 class="admin-title">Admin Dashboard</h1>
            <div class="admin-actions">
                <a href="/admin/new-article" class="btn">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                        <path d="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z" />
                    </svg>
                    New Article
                </a>
            </div>
        </div>

        <div class="admin-card">
            <div class="admin-card-header">
                <h2 class="admin-card-title">Published Articles</h2>
            </div>

            <div class="article-list">
                <% articles.forEach(article => { %>
                    <div class="article-item">
                        <span class="article-item-title"><%= article.title %></span>
                        <div class="article-item-actions">
                            <button class="btn btn-small admin-btn edit"  data-id="<%= article.id %>">Edit</button>
                            <button class="btn btn-small admin-btn delete" data-id="<%= article.id %>" data-type="article">Delete</button>
                        </div>
                    </div>
                <% }) %>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <div class="admin-card">
        <div class="admin-card-header">
            <h2 class="admin-card-title">Admin Users</h2>
        </div>
        <div class="article-list">
            <% admins.forEach(admin => { %>
                <div class="article-item">
                    <span class="article-item-title"><%= admin.firstname %> (<%= admin.email %>)</span>
                </div>
            <% }) %>
        </div>
    </div>

    <div class="admin-card">
        <div class="admin-card-header">
            <h2 class="admin-card-title">Regular Users</h2>
        </div>
        <div class="article-list">
            <% users.forEach(user => { %>
                <div class="article-item">
                    <span class="article-item-title"><%= user.firstname %> (<%= user.email %>)</span>
                    <div class="article-item-actions">
                        <button class="btn btn-small btn-danger admin-btn delete" data-id="<%= user._id %>" data-type="user">Delete</button>
                    </div>
                </div>
            <% }) %>
        </div>
    </div>
</div>

<!-- Include SweetAlert2 from CDN -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert2/11.7.32/sweetalert2.all.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert2/11.7.32/sweetalert2.min.css">

<script>
    // Add event listeners to all buttons
    document.addEventListener('DOMContentLoaded', function() {
        const deleteButtons = document.querySelectorAll('.admin-btn.delete');
        deleteButtons.forEach(button => {
            button.addEventListener('click', function() {
                const id = this.getAttribute('data-id');
                const type = this.getAttribute('data-type');
                confirmDelete(id, type);
            });
        });

        const editButtons = document.querySelectorAll('.admin-btn.edit');
        editButtons.forEach(button => {
            button.addEventListener('click', function() {
                const articleId = this.getAttribute('data-id');
                window.location.href = `/admin/edit-article/${articleId}`;
            });
        });
    });


    // Function to show delete confirmation using SweetAlert2
    function confirmDelete(id, type) {
        Swal.fire({
            title: 'Are you sure?',
            text: "This action cannot be undone!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                if (type === 'article') {
                    deleteArticle(id);
                } else if (type === 'user') {
                    deleteUser(id);
                }
            }
        });
    }


    // Function to handle delete request
    function deleteArticle(id) {
        fetch(`/admin/article/${id}`, {
            method: 'DELETE',
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        title: 'Deleted!',
                        text: 'The article has been deleted.',
                        icon: 'success',
                        timer: 1500,
                        showConfirmButton: false
                    }).then(() => {
                        window.location.reload();
                    });
                } else {
                    Swal.fire({
                        title: 'Error!',
                        text: 'Failed to delete the article: ' + data.message,
                        icon: 'error'
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    title: 'Error!',
                    text: 'An error occurred while deleting the article',
                    icon: 'error'
                });
            });
    }

    function deleteUser(id) {
        fetch(`/admin/user/${id}`, {
            method: 'DELETE',
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire({
                        title: 'Deleted!',
                        text: 'The user has been deleted.',
                        icon: 'success',
                        timer: 1500,
                        showConfirmButton: false
                    }).then(() => {
                        window.location.reload();
                    });
                } else {
                    Swal.fire({
                        title: 'Error!',
                        text: 'Failed to delete the user: ' + data.message,
                        icon: 'error'
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    title: 'Error!',
                    text: 'An error occurred while deleting the user',
                    icon: 'error'
                });
            });
    }
</script>

<%- include('../../partials/footer') %>